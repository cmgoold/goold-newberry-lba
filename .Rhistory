dog_green_diffs2 <- (get_ordinal_probs(dog_shelter_pred, draws$sigma)[[1]] -
get_ordinal_probs(dog_adoption_pred_2, draws$epsilon)[[1]]
)
dog_amber_diffs2 <- (get_ordinal_probs(dog_shelter_pred, draws$sigma)[[2]] -
get_ordinal_probs(dog_adoption_pred_2, draws$epsilon)[[2]]
)
dog_red_diffs2 <- (get_ordinal_probs(dog_shelter_pred, draws$sigma)[[3]] -
get_ordinal_probs(dog_adoption_pred_2, draws$epsilon)[[3]]
)
hdi(dog_red_diffs2)
hdi(dog_red_diffs1)
sample_dogs <- 9
which_contexts <- 1:8
for(i in seq_along(sample_dogs)){
for(k in seq_along(which_contexts)){
png(paste0("~/Dropbox/PhD/PhD_NMBU/PaperIV/GooldNewberry2020-lba/analysis_code/all_dogs_plots/dog_",
sample_dogs[i], "_context_", which_contexts[k]),
width = 2000, height=800, res=200)
par(mfrow=c(1,3))
label_size <- 1.5
dogs_shelter_data <- d_s_stan[d_s_stan$dog_id %in% sample_dogs[i] & d_s_stan$context_id %in% which_contexts[k],
c("day_since_arrival_Z", "day_since_arrival", "behaviour_code_colour")]
dogs_adoption_data <- d_a_stan[d_a_stan$dog_id %in% sample_dogs[i] & d_a_stan$context_id %in% which_contexts[k],
c("days_after_adoption_Z", "days_after_adoption", "behaviour_code_colour")]
total_length <- nrow(dogs_shelter_data) + nrow(dogs_adoption_data)
dogs_shelter_preds <- sapply(dogs_shelter_data$day_since_arrival_Z,
function(x){
draws$alpha +
random_effect_list$r_s_j_intercept[,sample_dogs[i]] +
random_effect_list$r_s_g_intercept[,which_contexts[k]] +
random_effect_list$r_s_jg_intercept[, make_cc_interaction(sample_dogs[i],which_contexts[k])] +
(
draws$beta +
random_effect_list$r_s_j_slope[,sample_dogs[i]] +
random_effect_list$r_s_g_slope[,which_contexts[k]] +
random_effect_list$r_s_jg_slope[, make_cc_interaction(sample_dogs[i],which_contexts[k])]
) * x
})
dogs_adoption_preds <- sapply(dogs_adoption_data$days_after_adoption_Z,
function(x){
draws$delta +
random_effect_list$r_a_j_intercept[,sample_dogs[i]] +
random_effect_list$r_a_g_intercept[,which_contexts[k]] +
random_effect_list$r_a_jg_intercept[, make_cc_interaction(sample_dogs[i],which_contexts[k])] +
(
draws$gamma +
random_effect_list$r_a_j_slope[,sample_dogs[i]] +
random_effect_list$r_a_g_slope[,which_contexts[k]] +
random_effect_list$r_a_jg_slope[, make_cc_interaction(sample_dogs[i],which_contexts[k])]
) * x
})
dog_predict_df <- data.frame(
dog_id = rep(sample_dogs[i], total_length),
which_context = rep(which_contexts[i], total_length),
days = c(dogs_shelter_data$day_since_arrival, max(dogs_shelter_data$day_since_arrival) + dogs_adoption_data$days_after_adoption),
codes = c(ifelse(is.na(dogs_shelter_data$behaviour_code_colour), 0, dogs_shelter_data$behaviour_code_colour),
ifelse(is.na(dogs_adoption_data$behaviour_code_colour), 0, dogs_adoption_data$behaviour_code_colour)),
time = rep(c("shelter","adoption"), c(nrow(dogs_shelter_data), nrow(dogs_adoption_data))),
mu = c(apply(dogs_shelter_preds, 2, mean), apply(dogs_adoption_preds, 2, mean)),
hdi_2.5 = c(apply(dogs_shelter_preds, 2, hdi)[1,], apply(dogs_adoption_preds, 2, hdi)[1,]),
hdi_97.5 = c(apply(dogs_shelter_preds, 2, hdi)[2,], apply(dogs_adoption_preds, 2, hdi)[2,])
)
dog_predict_df$code_colour <- ifelse(
dog_predict_df$codes %in% 0, scales::alpha("black", 0.1),
ifelse(
dog_predict_df$codes %in% 1, "darkolivegreen3",
ifelse(
dog_predict_df$codes %in% 2, "darkorange2",
"firebrick2"
)
)
)
plot(dog_predict_df$days, dog_predict_df$codes, type="n", ylim=c(-5,5),
axes=F, bty="n",
xlab = "observation days", ylab = "behaviour (latent & ordinal scales)",
cex.lab = label_size)
abline(h=c(1, 2, 3), lty=3,
col=scales::alpha("black", 0.5))
polygon(x=c(min(dog_predict_df[dog_predict_df$time %in% "shelter", "days"])-5,
min(dog_predict_df[dog_predict_df$time %in% "shelter", "days"])-5,
max(dog_predict_df[dog_predict_df$time %in% "shelter", "days"])+1,
max(dog_predict_df[dog_predict_df$time %in% "shelter", "days"])+1),
y = c(-10, 10, 10, -10),
col = scales::alpha("black", 0.1), border = NA
)
polygon(x=c(min(dog_predict_df[dog_predict_df$time %in% "adoption", "days"])-1,
min(dog_predict_df[dog_predict_df$time %in% "adoption", "days"])-1,
max(dog_predict_df[dog_predict_df$time %in% "adoption", "days"])+5,
max(dog_predict_df[dog_predict_df$time %in% "adoption", "days"])+5),
y = c(-10, 10, 10, -10),
col = scales::alpha("black", 0.1), border = NA
)
axis(side = 2, cex.axis=1, las=1,
at = c(-5, 1,2,3,5))
axis(side=1, cex.axis=1,
at = c(0,
max(dog_predict_df[dog_predict_df$time %in% "shelter", "days"]),
min(dog_predict_df[dog_predict_df$time %in% "adoption", "days"]),
max(dog_predict_df$days))
)
mtext(paste0(sample_dogs[i], " ", clean_context_labels[which(context_labels_numbers %in% which_contexts[k])]),
cex = 0.7, adj = 0)
# shelter preds
sample_lines <- sample(1:nrow(draws), 50, replace=T)
for(j in seq_along(sample_lines)){
lines(dog_predict_df[dog_predict_df$time %in% "shelter", "days"],
dogs_shelter_preds[sample_lines[j], ],
col = scales::alpha("slateblue", 0.2))
}
for(j in seq_along(sample_lines)){
lines(dog_predict_df[dog_predict_df$time %in% "adoption", "days"],
dogs_adoption_preds[sample_lines[j], ],
col = scales::alpha("slateblue", 0.2))
}
points(dog_predict_df$days, ifelse(is.na(dog_predict_df$codes), 0, dog_predict_df$codes),
pch=ifelse(dog_predict_df$codes > 0, 16, 1),
cex = ifelse(dog_predict_df$codes > 0, 1, 0),
col = scales::alpha(dog_predict_df$code_colour, 1))
# shelter code probs plot
shelter_code_probs <- table(dog_predict_df[dog_predict_df$codes %in% 1:3 & dog_predict_df$time %in% "shelter", "codes"])/
length(dog_predict_df[dog_predict_df$codes %in% 1:3 & dog_predict_df$time %in% "shelter", "codes"])
which_codes <- as.numeric(names(shelter_code_probs))
if(length(which_codes) != 3){
missing_codes <- numeric()
for(j in 1:3){
if(length(which_codes[which_codes %in% j]) == 0) {
missing_codes <- c(missing_codes, j)
#which_codes <- sort(c(which_codes, i), decreasing = F)
}
}
temp_codes <- rep(NA, 3)
for(j in 1:3){
if(j %in% which_codes) temp_codes[j] <- shelter_code_probs[names(shelter_code_probs)==j] else temp_codes[j] <- 0
}
shelter_code_probs <- temp_codes
names(shelter_code_probs) <- 1:3
}
# ordinal code probs
shelter_pred_codes <- do.call("rbind.data.frame", apply(dogs_shelter_preds, 2, function(x) get_ordinal_probs(x, draws$sigma)))
the_colours <- c("darkolivegreen3","darkorange2","firebrick2")
plot(density(rowMeans(dogs_shelter_preds)), lwd=2, col=scales::alpha("slateblue",0.8),
xlim=c(-5,5), ylim=c(0,1.6), bty="n", axes=F, main="", type="n",
xlab = "behaviour (latent & ordinal scales)",
ylab = "probability & density",
cex.lab = label_size)
for(l in 1:3) if(shelter_code_probs[l] > 0) lines(c(l,l), c(0, shelter_code_probs[l]), lwd=10, col=the_colours[l] )
points(1:3, colMeans(shelter_pred_codes))
segments(x0 = 1:3, x1 = 1:3,
y0 = apply(shelter_pred_codes, 2, hdi)[1,],
y1 = apply(shelter_pred_codes, 2, hdi)[2,]
)
lines(density(rowMeans(dogs_shelter_preds)), lwd=2, col=scales::alpha("slateblue",0.8))
axis(side = 1, at = c(-5, 1, 2, 3, 5))
axis(side = 2, at = c(0, 1, 1.6), labels = c(0, 1, ""), las=1)
mtext(
text = paste0("n = ", sum(!is.na(dogs_shelter_data$behaviour_code_colour)),
"; missing = ", round(sum(is.na(dogs_shelter_data$behaviour_code_colour))/nrow(dogs_shelter_data),2)*100,
"%"
),
side = 3, at = -2, cex = 0.8
)
# adoption code probs plot
adoption_code_probs <- table(dog_predict_df[dog_predict_df$codes %in% 1:3 & dog_predict_df$time %in% "adoption", "codes"])/
length(dog_predict_df[dog_predict_df$codes %in% 1:3 & dog_predict_df$time %in% "adoption", "codes"])
which_codes <- as.numeric(names(adoption_code_probs))
if(length(which_codes) != 3){
missing_codes <- numeric()
for(j in 1:3){
if(length(which_codes[which_codes %in% j]) == 0) {
missing_codes <- c(missing_codes, j)
}
}
temp_codes <- rep(NA, 3)
for(j in 1:3){
if(j %in% which_codes) temp_codes[j] <- adoption_code_probs[names(adoption_code_probs)==j] else temp_codes[j] <- 0
}
adoption_code_probs <- temp_codes
names(adoption_code_probs) <- 1:3
}
# ordinal code probs
adoption_pred_codes <- do.call("rbind.data.frame", apply(dogs_adoption_preds, 2, function(x) get_ordinal_probs(x, draws$epsilon)))
plot(density(rowMeans(dogs_adoption_preds)), lwd=2,
xlim=c(-5,5), ylim=c(0,1.6), bty="n", axes=F, main="", type="n",
xlab = "behaviour (latent & ordinal scales)",
ylab = "probability & density",
cex.lab = label_size)
for(l in 1:3) if(adoption_code_probs[l] > 0) lines(c(l,l), c(0, adoption_code_probs[l]), lwd=10, col=the_colours[l] )
points(1:3, colMeans(adoption_pred_codes))
segments(x0 = 1:3, x1 = 1:3,
y0 = apply(adoption_pred_codes, 2, hdi)[1,],
y1 = apply(adoption_pred_codes, 2, hdi)[2,]
)
lines(density(rowMeans(dogs_adoption_preds)), lwd=2, col=scales::alpha("slateblue",0.8))
axis(side = 1, at = c(-5, 1, 2, 3, 5))
axis(side = 2, at = c(0, 1, 1.6), labels = c(0, 1, ""), las=1)
mtext(
text = paste0("n = ", sum(!is.na(dogs_adoption_data$behaviour_code_colour)),
"; missing = ", round(sum(is.na(dogs_adoption_data$behaviour_code_colour))/nrow(dogs_adoption_data),2)*100,
"%"
),
side = 3, at = -2, cex = 0.8
)
dev.off()
}#k
}#i
mean(dog_red_diffs1)
mean(dog_red_diffs2)
mean(draws$gamma + random_effect_list$r_a_g_intercept[,8])
hdi(draws$gamma + random_effect_list$r_a_g_intercept[,8])
hdi(draws$gamma + random_effect_list$r_a_g_slope[,8])
mean(draws$gamma + random_effect_list$r_a_g_slope[,8])
#-----------------------------------------------------------------------------------------------
# hdi function
hdi <- function(x, prob=0.95) coda::HPDinterval(coda::as.mcmc(x), prob=prob)
hdi(dog_red_diffs1)
hdi(dog_red_diffs1, 0.89)
hdi(dog_red_diffs2, 0.89)
par(mfrow=c(1,1))
plot(density(dog_red_diffs1))
plot(density(dog_red_diffs2))
plot(density(dog_red_diffs1))
plot(density(dog_red_diffs2))
plot(density(dog_red_diffs1))
plot(density(get_ordinal_probs(draws$delta +
random_effect_list$r_a_j_intercept[,i] +
random_effect_list$r_a_g_intercept[,k] +
random_effect_list$r_a_jg_intercept[, make_cc_interaction(i,k)] +
(draws$gamma +
random_effect_list$r_a_j_slope[,i] +
random_effect_list$r_a_g_slope[,k] +
random_effect_list$r_a_jg_slope[, make_cc_interaction(i,k)]) * x_joint_1)[[3]]))
plot(density(get_ordinal_probs(draws$delta +
random_effect_list$r_a_j_intercept[,i] +
random_effect_list$r_a_g_intercept[,k] +
random_effect_list$r_a_jg_intercept[, make_cc_interaction(i,k)] +
(draws$gamma +
random_effect_list$r_a_j_slope[,i] +
random_effect_list$r_a_g_slope[,k] +
random_effect_list$r_a_jg_slope[, make_cc_interaction(i,k)]) * x_joint_1, draws$epsilon)[[3]]))
plot(density(get_ordinal_probs(draws$delta +
random_effect_list$r_a_j_intercept[,i] +
random_effect_list$r_a_g_intercept[,k] +
random_effect_list$r_a_jg_intercept[, make_cc_interaction(i,k)] +
(draws$gamma +
random_effect_list$r_a_j_slope[,i] +
random_effect_list$r_a_g_slope[,k] +
random_effect_list$r_a_jg_slope[, make_cc_interaction(i,k)]) * x_joint_2, draws$epsilon)[[3]]))
plot(density(get_ordinal_probs(draws$alpha +
random_effect_list$r_s_j_intercept[,i] +
random_effect_list$r_s_g_intercept[,k] +
random_effect_list$r_s_jg_intercept[, make_cc_interaction(i,k)] +
(draws$beta +
random_effect_list$r_s_j_slope[,i] +
random_effect_list$r_s_g_slope[,k] +
random_effect_list$r_s_jg_slope[, make_cc_interaction(i,k)]) * x, draws$sigma)[[3]]))
plot(density(random_effect_list$r_s_jg_intercept[, make_cc_interaction(i,k)]))
plot(density(random_effect_list$r_s_jg_slope[, make_cc_interaction(i,k)]))
hdi <- function(x, prob=0.9) coda::HPDinterval(coda::as.mcmc(x), prob=prob)
# now make predictions from the model posterior distributions - better method!
green_diff_es <- amber_diff_es <- red_diff_es <- array(NA,
dim=c( length(unique(d_s_stan$dog_id)),
length(unique(d_s_stan$context_id))*4))
# which dogs have different probabilities between shelter and post-adoption
for(i in 1:length(unique(d_s_stan$dog_id))){
# get the day after arrival/adoption for each dog desired for predictions
# set to zero to hold at overall means (~ 30 days after arrival, ~30 days post-adoption)
x <- mean( d_s_stan[d_s_stan$dog_id %in% i, "day_since_arrival_Z"] )
x_joint_1 <- d_a_stan[d_a_stan$dog_id %in% i, "days_after_adoption_Z"][[1]]
x_joint_2 <- d_a_stan[d_a_stan$dog_id %in% i, "days_after_adoption_Z"][[2]]
for(k in 1:length(unique(d_s_stan$context_id))){
dog_shelter_pred <- draws$alpha +
random_effect_list$r_s_j_intercept[,i] +
random_effect_list$r_s_g_intercept[,k] +
random_effect_list$r_s_jg_intercept[, make_cc_interaction(i,k)] +
(draws$beta +
random_effect_list$r_s_j_slope[,i] +
random_effect_list$r_s_g_slope[,k] +
random_effect_list$r_s_jg_slope[, make_cc_interaction(i,k)]) * x
dog_adoption_pred_1 <- draws$delta +
random_effect_list$r_a_j_intercept[,i] +
random_effect_list$r_a_g_intercept[,k] +
random_effect_list$r_a_jg_intercept[, make_cc_interaction(i,k)] +
(draws$gamma +
random_effect_list$r_a_j_slope[,i] +
random_effect_list$r_a_g_slope[,k] +
random_effect_list$r_a_jg_slope[, make_cc_interaction(i,k)]) * x_joint_1
dog_adoption_pred_2 <- draws$delta +
random_effect_list$r_a_j_intercept[,i] +
random_effect_list$r_a_g_intercept[,k] +
random_effect_list$r_a_jg_intercept[, make_cc_interaction(i,k)] +
(draws$gamma +
random_effect_list$r_a_j_slope[,i] +
random_effect_list$r_a_g_slope[,k] +
random_effect_list$r_a_jg_slope[, make_cc_interaction(i,k)]) * x_joint_2
dog_green_diffs1 <- (get_ordinal_probs(dog_shelter_pred, draws$sigma)[[1]] -
get_ordinal_probs(dog_adoption_pred_1, draws$epsilon)[[1]]
)
dog_amber_diffs1 <- (get_ordinal_probs(dog_shelter_pred, draws$sigma)[[2]] -
get_ordinal_probs(dog_adoption_pred_1, draws$epsilon)[[2]]
)
dog_red_diffs1 <- (get_ordinal_probs(dog_shelter_pred, draws$sigma)[[3]] -
get_ordinal_probs(dog_adoption_pred_1, draws$epsilon)[[3]]
)
dog_green_diffs2 <- (get_ordinal_probs(dog_shelter_pred, draws$sigma)[[1]] -
get_ordinal_probs(dog_adoption_pred_2, draws$epsilon)[[1]]
)
dog_amber_diffs2 <- (get_ordinal_probs(dog_shelter_pred, draws$sigma)[[2]] -
get_ordinal_probs(dog_adoption_pred_2, draws$epsilon)[[2]]
)
dog_red_diffs2 <- (get_ordinal_probs(dog_shelter_pred, draws$sigma)[[3]] -
get_ordinal_probs(dog_adoption_pred_2, draws$epsilon)[[3]]
)
green_diff_es[i,k] <- ifelse(hdi(dog_green_diffs1)[1] > 0, mean(dog_green_diffs1), NA)
green_diff_es[i,k+8] <- ifelse(hdi(dog_green_diffs1)[2] < 0, mean(dog_green_diffs1), NA)
amber_diff_es[i,k] <- ifelse(hdi(dog_amber_diffs1)[1] > 0, mean(dog_amber_diffs1), NA)
amber_diff_es[i,k+8] <- ifelse(hdi(dog_amber_diffs1)[2] < 0, mean(dog_amber_diffs1), NA)
red_diff_es[i,k] <- ifelse(hdi(dog_red_diffs1)[1] > 0, mean(dog_red_diffs1), NA)
red_diff_es[i,k+8] <- ifelse(hdi(dog_red_diffs1)[2] < 0, mean(dog_red_diffs1), NA)
green_diff_es[i,k+8*2] <- ifelse(hdi(dog_green_diffs2)[1] > 0, mean(dog_green_diffs2), NA)
green_diff_es[i,k+8*3] <- ifelse(hdi(dog_green_diffs2)[2] < 0, mean(dog_green_diffs2), NA)
amber_diff_es[i,k+8*2] <- ifelse(hdi(dog_amber_diffs2)[1] > 0, mean(dog_amber_diffs2), NA)
amber_diff_es[i,k+8*3] <- ifelse(hdi(dog_amber_diffs2)[2] < 0, mean(dog_amber_diffs2), NA)
red_diff_es[i,k + 8*2] <- ifelse(hdi(dog_red_diffs2)[1] > 0, mean(dog_red_diffs2), NA)
red_diff_es[i,k+8*3] <- ifelse(hdi(dog_red_diffs2)[2] < 0, mean(dog_red_diffs2), NA)
}
}
# prior distribution
# normal distribution with mean (a) = 90, and sd (b) = 10
a <- 90; b <- 10
curve(dnorm(x, a, b), from=50, to=130)
# 50% of the distribution lies up to 90
pnorm(90, mean = a, sd = b)
1 - pnorm(90, mean = a, sd = b)
print(
colour_diffs_df <- data.frame(
colour = rep(c("green","amber","red"), each=8*4),
higher_lower_s = rep(c("higher","lower"), each=8, times=3*2),
adoption_call = rep(c("first","second"), each = 8*2, times = 3),
contexts_num = rep(sorted_context_numbers, 4*3),
context_label = rep(old_context_labels, 4*3),
num_dogs = c(
apply(green_diff_es[,1:8], 2, function(x) sum( !is.na(x) )),
-1*apply(green_diff_es[,9:16], 2, function(x) sum(!is.na(x))),
apply(green_diff_es[,17:24], 2, function(x) sum( !is.na(x) )),
-1*apply(green_diff_es[,25:32], 2, function(x) sum(!is.na(x))),
apply(amber_diff_es[,1:8], 2, function(x) sum(!is.na(x))),
-1*apply(amber_diff_es[,9:16], 2, function(x) sum(!is.na(x))),
apply(amber_diff_es[,17:24], 2, function(x) sum( !is.na(x) )),
-1*apply(amber_diff_es[,25:32], 2, function(x) sum(!is.na(x))),
apply(red_diff_es[,1:8], 2, function(x) sum(!is.na(x))),
-1*apply(red_diff_es[,9:16], 2, function(x) sum(!is.na(x))),
apply(red_diff_es[,17:24], 2, function(x) sum( !is.na(x) )),
-1*apply(red_diff_es[,25:32], 2, function(x) sum(!is.na(x)))
),
mu = c(
apply(green_diff_es[,1:8], 2, function(x) if(sum(!is.na(x))>1) mean(x, na.rm = T) else NA),
apply(green_diff_es[,9:16], 2, function(x) if(sum(!is.na(x))>1) mean(x, na.rm = T) else NA),
apply(green_diff_es[,17:24], 2, function(x) if(sum(!is.na(x))>1) mean(x, na.rm = T) else NA),
apply(green_diff_es[,25:32], 2, function(x) if(sum(!is.na(x))>1) mean(x, na.rm = T) else NA),
apply(amber_diff_es[,1:8], 2, function(x) if(sum(!is.na(x))>1) mean(x, na.rm = T) else NA),
apply(amber_diff_es[,9:16], 2, function(x) if(sum(!is.na(x))>1) mean(x, na.rm = T) else NA),
apply(amber_diff_es[,17:24], 2, function(x) if(sum(!is.na(x))>1) mean(x, na.rm = T) else NA),
apply(amber_diff_es[,25:32], 2, function(x) if(sum(!is.na(x))>1) mean(x, na.rm = T) else NA),
apply(red_diff_es[,1:8], 2, function(x) if(sum(!is.na(x))>1) mean(x, na.rm = T) else NA),
apply(red_diff_es[,9:16], 2, function(x) if(sum(!is.na(x))>1) mean(x, na.rm = T) else NA),
apply(red_diff_es[,17:24], 2, function(x) if(sum(!is.na(x))>1) mean(x, na.rm = T) else NA),
apply(red_diff_es[,25:32], 2, function(x) if(sum(!is.na(x))>1) mean(x, na.rm = T) else NA)
),
hdi_2.5 = c(
apply(green_diff_es[,1:8], 2, function(x) if(sum(!is.na(x))>1) hdi(x)[1] else NA),
apply(green_diff_es[,9:16], 2, function(x) if(sum(!is.na(x))>1) hdi(x)[1] else NA),
apply(green_diff_es[,17:24], 2, function(x) if(sum(!is.na(x))>1) hdi(x)[1] else NA),
apply(green_diff_es[,25:32], 2, function(x) if(sum(!is.na(x))>1) hdi(x)[1] else NA),
apply(amber_diff_es[,1:8], 2, function(x) if(sum(!is.na(x))>1) hdi(x)[1] else NA),
apply(amber_diff_es[,9:16], 2, function(x) if(sum(!is.na(x))>1) hdi(x)[1] else NA),
apply(amber_diff_es[,17:24], 2, function(x) if(sum(!is.na(x))>1) hdi(x)[1] else NA),
apply(amber_diff_es[,25:32], 2, function(x) if(sum(!is.na(x))>1) hdi(x)[1] else NA),
apply(red_diff_es[,1:8], 2, function(x) if(sum(!is.na(x))>1) hdi(x)[1] else NA),
apply(red_diff_es[,9:16], 2, function(x) if(sum(!is.na(x))>1) hdi(x)[1] else NA),
apply(red_diff_es[,17:24], 2, function(x) if(sum(!is.na(x))>1) hdi(x)[1] else NA),
apply(red_diff_es[,25:32], 2, function(x) if(sum(!is.na(x))>1) hdi(x)[1] else NA)
),
hdi_97.5 = c(
apply(green_diff_es[,1:8], 2, function(x) if(sum(!is.na(x))>1) hdi(x)[2] else NA),
apply(green_diff_es[,9:16], 2, function(x) if(sum(!is.na(x))>1) hdi(x)[2] else NA),
apply(green_diff_es[,17:24], 2, function(x) if(sum(!is.na(x))>1) hdi(x)[2] else NA),
apply(green_diff_es[,25:32], 2, function(x) if(sum(!is.na(x))>1) hdi(x)[2] else NA),
apply(amber_diff_es[,1:8], 2, function(x) if(sum(!is.na(x))>1) hdi(x)[2] else NA),
apply(amber_diff_es[,9:16], 2, function(x) if(sum(!is.na(x))>1) hdi(x)[2] else NA),
apply(amber_diff_es[,17:24], 2, function(x) if(sum(!is.na(x))>1) hdi(x)[2] else NA),
apply(amber_diff_es[,25:32], 2, function(x) if(sum(!is.na(x))>1) hdi(x)[2] else NA),
apply(red_diff_es[,1:8], 2, function(x) if(sum(!is.na(x))>1) hdi(x)[2] else NA),
apply(red_diff_es[,9:16], 2, function(x) if(sum(!is.na(x))>1) hdi(x)[2] else NA),
apply(red_diff_es[,17:24], 2, function(x) if(sum(!is.na(x))>1) hdi(x)[2] else NA),
apply(red_diff_es[,25:32], 2, function(x) if(sum(!is.na(x))>1) hdi(x)[2] else NA)
)
))
colour_diffs_df_ordered <- colour_diffs_df[order(colour_diffs_df$contexts_num), ]
barplot_axis_names <- as.vector(sapply(clean_context_labels, function(x) c(x, " ")))
op <- par(mfrow = c(3, 2),
oma = c(5,4,0,0) + 0.1,
mar = c(0,0,1,1) + 0.1)
green1_mat <- matrix(colour_diffs_df_ordered[colour_diffs_df_ordered$colour %in% "green"&
colour_diffs_df_ordered$adoption_call %in% "first", "num_dogs"], nrow=2)
green1_mu_es <- round(mean(abs(colour_diffs_df_ordered[colour_diffs_df_ordered$colour %in% "green"&
colour_diffs_df_ordered$adoption_call %in% "first", "mu"]), na.rm = T), 2)
green1_hdi_es2.5 <- round(hdi(abs(colour_diffs_df_ordered[colour_diffs_df_ordered$colour %in% "green"&
colour_diffs_df_ordered$adoption_call %in% "first", "mu"]))[1], 2)
green1_hdi_es_97.5 <- round(hdi(abs(colour_diffs_df_ordered[colour_diffs_df_ordered$colour %in% "green"&
colour_diffs_df_ordered$adoption_call %in% "first", "mu"]))[2], 2)
green2_mat <- matrix(colour_diffs_df_ordered[colour_diffs_df_ordered$colour %in% "green"&
colour_diffs_df_ordered$adoption_call %in% "second", "num_dogs"], nrow=2)
green2_mu_es <- round(mean(abs(colour_diffs_df_ordered[colour_diffs_df_ordered$colour %in% "green"&
colour_diffs_df_ordered$adoption_call %in% "second", "mu"]), na.rm = T), 2)
green2_hdi_es2.5 <- round(hdi(abs(colour_diffs_df_ordered[colour_diffs_df_ordered$colour %in% "green"&
colour_diffs_df_ordered$adoption_call %in% "second", "mu"]))[1], 2)
green2_hdi_es_97.5 <- round(hdi(abs(colour_diffs_df_ordered[colour_diffs_df_ordered$colour %in% "green"&
colour_diffs_df_ordered$adoption_call %in% "second", "mu"]))[2], 2)
barplot( green1_mat/241, beside = T, ylim=c(-1,1), col = "darkolivegreen2", axes=F)
rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4],col = scales::alpha("lightgray", 0.6), border = NA)
gbp1 <- barplot( green1_mat/241, beside = T, ylim=c(-1,1), col = "darkolivegreen2", axes=F, add = T)
mtext(at=1, text="a", font=2)
axis(side=2, at=c(-1, 0, 1), lwd=1, las=2)
abline(h=0, col=scales::alpha("black",0.8), lty=1)
text(x = gbp1, y=as.vector(green1_mat/241) + 0.2*rep(c(1,-1), 8), labels = abs(as.vector(green1_mat)))
# mtext(text=paste0("effect size: ", green1_mu_es, " [", green1_hdi_es2.5, ", ", green1_hdi_es_97.5, "]"),
#       side = 3, line = -1.5, at = 7, cex = 0.8)
mtext(text=bquote(expr = delta == .(green1_mu_es) ~ "["*.(green1_hdi_es2.5)*","*.(green1_hdi_es_97.5)*"]"),
side = 3, line = -1.5, at = 7, cex = 0.8)
barplot( green2_mat/241, beside = T, ylim=c(-1,1), col = "darkolivegreen2", axes=F)
rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4],col = scales::alpha("lightgray", 0.6), border = NA)
gbp2 <- barplot( green2_mat/241, beside = T, ylim=c(-1,1), col = "darkolivegreen2", axes=F, add = T)
mtext(at=1, text="b", font=2)
#axis(side=2, at=c(-1, 0, 1), lwd=1)
abline(h=0, col=scales::alpha("black",0.8), lty=1)
text(x = gbp2, y=as.vector(green2_mat/241) + 0.2*rep(c(1,-1), 8), labels = abs(as.vector(green2_mat)))
mtext(text=bquote(expr = delta == .(green2_mu_es) ~ "["*.(green2_hdi_es2.5)*","*.(green2_hdi_es_97.5)*"]"),
side = 3, line = -1.5, at = 7, cex = 0.8)
amber1_mat <- matrix(colour_diffs_df_ordered[colour_diffs_df_ordered$colour %in% "amber"&
colour_diffs_df_ordered$adoption_call %in% "first", "num_dogs"], nrow=2)
amber1_mu_es <- round(mean(abs(colour_diffs_df_ordered[colour_diffs_df_ordered$colour %in% "amber"&
colour_diffs_df_ordered$adoption_call %in% "first", "mu"]), na.rm = T), 2)
amber1_hdi_es2.5 <- round(hdi(abs(colour_diffs_df_ordered[colour_diffs_df_ordered$colour %in% "amber"&
colour_diffs_df_ordered$adoption_call %in% "first", "mu"]))[1], 2)
amber1_hdi_es_97.5 <- round(hdi(abs(colour_diffs_df_ordered[colour_diffs_df_ordered$colour %in% "amber"&
colour_diffs_df_ordered$adoption_call %in% "first", "mu"]))[2], 2)
amber2_mat <- matrix(colour_diffs_df_ordered[colour_diffs_df_ordered$colour %in% "amber"&
colour_diffs_df_ordered$adoption_call %in% "second", "num_dogs"], nrow=2)
amber2_mu_es <- round(mean(abs(colour_diffs_df_ordered[colour_diffs_df_ordered$colour %in% "amber"&
colour_diffs_df_ordered$adoption_call %in% "second", "mu"]), na.rm = T), 2)
amber2_hdi_es2.5 <- round(hdi(abs(colour_diffs_df_ordered[colour_diffs_df_ordered$colour %in% "amber"&
colour_diffs_df_ordered$adoption_call %in% "second", "mu"]))[1], 2)
amber2_hdi_es_97.5 <- round(hdi(abs(colour_diffs_df_ordered[colour_diffs_df_ordered$colour %in% "amber"&
colour_diffs_df_ordered$adoption_call %in% "second", "mu"]))[2], 2)
barplot( amber1_mat/241, beside = T, ylim=c(-1,1), col = "darkorange2", axes=F)
rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4],col = scales::alpha("lightgray", 0.6), border = NA)
abp1 <- barplot( amber1_mat/241, beside = T, ylim=c(-1,1), col = "darkorange2", axes=F, add = T)
mtext(at=1, text="c", font=2)
axis(side=2, at=c(-1, 0, 1), lwd=1, las=2)
abline(h=0, col=scales::alpha("black",0.8), lty=1)
text(x = abp1, y=as.vector(amber1_mat/241) + 0.2*rep(c(1,-1), 8), labels = abs(as.vector(amber1_mat)))
mtext(text=bquote(expr = delta == "NA"),
side = 3, line = -1.5, at = 4, cex = 0.8)
barplot( amber2_mat/241, beside = T, ylim=c(-1,1), col = "darkorange2", axes=F)
rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4],col = scales::alpha("lightgray", 0.6), border = NA)
abp2 <- barplot( amber2_mat/241, beside = T, ylim=c(-1,1), col = "darkorange2", axes=F, add = T)
mtext(at=1, text="d", font=2)
#axis(side=2, at=c(-1, 0, 1), lwd=1)
abline(h=0, col=scales::alpha("black",0.8), lty=1)
text(x = abp2, y=as.vector(amber2_mat/241) + 0.2*rep(c(1,-1), 8), labels = abs(as.vector(amber2_mat)))
mtext(text=bquote(expr = delta == "NA"),
side = 3, line = -1.5, at = 4, cex = 0.8)
red1_mat <- matrix(colour_diffs_df_ordered[colour_diffs_df_ordered$colour %in% "red"&
colour_diffs_df_ordered$adoption_call %in% "first", "num_dogs"], nrow=2)
red1_mu_es <- round(mean(abs(colour_diffs_df_ordered[colour_diffs_df_ordered$colour %in% "red"&
colour_diffs_df_ordered$adoption_call %in% "first", "mu"]), na.rm = T), 2)
red1_hdi_es2.5 <- round(hdi(abs(colour_diffs_df_ordered[colour_diffs_df_ordered$colour %in% "red"&
colour_diffs_df_ordered$adoption_call %in% "first", "mu"]))[1], 2)
red1_hdi_es_97.5 <- round(hdi(abs(colour_diffs_df_ordered[colour_diffs_df_ordered$colour %in% "red"&
colour_diffs_df_ordered$adoption_call %in% "first", "mu"]))[2], 2)
red2_mat <- matrix(colour_diffs_df_ordered[colour_diffs_df_ordered$colour %in% "red"&
colour_diffs_df_ordered$adoption_call %in% "second", "num_dogs"], nrow=2)
red2_mu_es <- round(mean(abs(colour_diffs_df_ordered[colour_diffs_df_ordered$colour %in% "red"&
colour_diffs_df_ordered$adoption_call %in% "second", "mu"]), na.rm = T), 2)
red2_hdi_es2.5 <- round(hdi(abs(colour_diffs_df_ordered[colour_diffs_df_ordered$colour %in% "red"&
colour_diffs_df_ordered$adoption_call %in% "second", "mu"]))[1], 2)
red2_hdi_es_97.5 <- round(hdi(abs(colour_diffs_df_ordered[colour_diffs_df_ordered$colour %in% "red"&
colour_diffs_df_ordered$adoption_call %in% "second", "mu"]))[2], 2)
barplot( red1_mat/241, beside = T, ylim=c(-1,1), col = "firebrick2", axes=F)
rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4],col = scales::alpha("lightgray", 0.6), border = NA)
rbp1 <- barplot( red1_mat/241, beside = T, ylim=c(-1,1), col = "firebrick2", axes=F, add = T)
mtext(at=1, text="e", font=2)
axis(side=2, at=c(-1, 0, 1), lwd=1, las=2)
abline(h=0, col=scales::alpha("black",0.8), lty=1)
text(x = rbp1, y=as.vector(red1_mat/241) + 0.2*rep(c(1,-1), 8), labels = abs(as.vector(red1_mat)))
mtext(text=bquote(expr = delta == .(red1_mu_es) ~ "["*.(red1_hdi_es2.5)*","*.(red1_hdi_es_97.5)*"]"),
side = 3, line = -1.5, at = 7, cex = 0.8)
text(as.vector(rbp1), par("usr")[3] + 0.42, labels = barplot_axis_names, cex = 1, srt = 45, pos = 1, xpd = TRUE)
barplot( red2_mat/241, beside = T, ylim=c(-1,1), col = "firebrick2", axes=F)
rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4],col = scales::alpha("lightgray", 0.6), border = NA)
rbp2 <- barplot( red2_mat/241, beside = T, ylim=c(-1,1), col = "firebrick2", axes=F, add = T)
mtext(at=1, text="f", font=2)
#axis(side=2, at=c(-1, 0, 1), lwd=1)
abline(h=0, col=scales::alpha("black",0.8), lty=1)
text(x = rbp2, y=as.vector(red2_mat/241) + 0.2*rep(c(1,-1), 8), labels = abs(as.vector(red2_mat)))
mtext(text=bquote(expr = delta == .(red2_mu_es) ~ "["*.(red2_hdi_es2.5)*","*.(red2_hdi_es_97.5)*"]"),
side = 3, line = -1.5, at = 7, cex = 0.8)
text(as.vector(rbp2), par("usr")[3] + 0.42, labels = barplot_axis_names, cex = 1, srt = 45, pos = 1, xpd = TRUE)
title(ylab = "proportion of dogs", xlab = "contexts", outer = T, line = 3, cex.lab = 1.7)
par(op)
par(mfrow=c(1,1))
apply(red_diff_es, 2, function(x) which(!is.na(x))) # which dogs differ
